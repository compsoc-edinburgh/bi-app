server {
    listen       443 ssl http2;
    server_name  bi.tardis.ed.ac.uk betterinformatics.com _;

    # certificates
    ssl_trusted_certificate /etc/letsencrypt/live/bi.tardis.ed.ac.uk/chain.pem;
    ssl_certificate /etc/letsencrypt/live/bi.tardis.ed.ac.uk/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/bi.tardis.ed.ac.uk/privkey.pem;

    location / {
        root /var/www/betterinformatics/_site;

        default_type "text/html";
        try_files  $uri $uri.html $uri/index.html index.html;
    }

    location /courses.json {
        root /var/www/betterinformatics/_site;
        add_header Access-Control-Allow-Origin *;
    }

    location /update_github {
        proxy_pass http://localhost:9992/;
    }

    location /cosign {
        proxy_pass       http://localhost:6663;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /drive {
        proxy_pass      http://localhost:9991;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /search {
        #proxy_pass      https://exams.is.ed.ac.uk/search;

        set $cors "";
        # OPTIONS indicates a CORS pre-flight request
        if ($request_method = 'OPTIONS') {
           set $cors "o";
        }

        # Append CORS headers to any request from
        # allowed CORS domain, except OPTIONS
        if ($cors = "") {
           add_header 'Access-Control-Allow-Origin' '$http_origin';
           add_header 'Access-Control-Allow-Credentials' 'true';
           proxy_pass      https://exams.is.ed.ac.uk;
        }

        # OPTIONS (pre-flight) request from allowed
        # CORS domain. return response directly
        if ($cors = "1o") {
           add_header 'Access-Control-Allow-Origin' '$http_origin';
           add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
           add_header 'Access-Control-Allow-Credentials' 'true';
           add_header 'Access-Control-Allow-Headers' 'Origin,Content-Type,Accept';
           add_header Content-Length 0;
           add_header Content-Type text/plain;
           return 204;
        }
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    #error_page   500 502 503 504  /50x.html;
    #location = /50x.html {
    #   root   /usr/share/nginx/html;
    #}
}
